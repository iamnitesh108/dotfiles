# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.



# default_floating_border normal
titlebar_padding 1
titlebar_border_thickness 0


### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $alt Mod1

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi 
### Output configuration
#
# Default wallpaper (more resolutions ggVGavailable in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/4k-Arch-Planet.png fill

output * bg /home/nitesh/Downloads/wallhaven-5yw5y8_1920x1080.png fill


#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:

# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'

#-------------------------
#-- Idle configuration: --
#-------------------------

	# Launch swayidle after 5 minutes of inactivity:
	exec swayidle -w \
	          timeout 300 'swaylock -f -c 000000' \
	          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
	          before-sleep 'swaylock -f -c 000000'

# exec_always swayidle -w \
#   timeout 300 'swaylock -f -c 000000' \
#   timeout 600 'swaymsg "output * power off"' \
#   timeout 1200 'systemctl suspend' \
#   resume 'swaymsg "output * power on"' \
#   before-sleep 'swaylock -f -c 000000'


#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $alt+Return exec $term


    # Kill focused window
    
    bindsym $mod+Shift+q kill
    bindsym $alt+Shift+q kill

    # Start your launcher

    bindsym $mod+d exec wofi --show drun


    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload
    bindsym $alt+Shift+r reload


    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

    # Audio controls
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%

# Screen brightness (requires brightnessctl or light)
bindsym XF86MonBrightnessDown exec brightnessctl set 1%-
bindsym XF86MonBrightnessUp exec brightnessctl set +1%

bindsym F9 exec swaylock -f -c 000000


#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $alt+$left focus left
    bindsym $mod+$down focus down
    bindsym $alt+$down focus down
    bindsym $mod+$up focus up
    bindsym $alt+$up focus up
    bindsym $mod+$right focus right
    bindsym $alt+$right focus right

    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $alt+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $alt+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $alt+Shift+$up move up
    bindsym $mod+Shift+$right move right
    bindsym $alt+Shift+$right move right


    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $alt+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $alt+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $alt+Shift+Up move up
    bindsym $mod+Shift+Right move right
    bindsym $alt+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $alt+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $alt+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $alt+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $alt+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $alt+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $alt+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $alt+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $alt+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $alt+9 workspace number 9
    bindsym $mod+0 workspace number 10
    bindsym $alt+0 workspace number 10



    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $alt+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $alt+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $alt+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $alt+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $alt+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $alt+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $alt+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $alt+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $alt+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    bindsym $alt+Shift+0 move container to workspace number 10



    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $alt+b splith
    bindsym $mod+v splitv
    bindsym $alt+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $alt+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $alt+w layout tabbed
    bindsym $mod+e layout toggle split
    bindsym $alt+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen toggle
    bindsym $alt+f fullscreen toggle

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle
    bindsym $alt+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle
    # bindsym $alt+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
    bindsym $alt+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad
    bindsym $alt+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
    bindsym $alt+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
bindsym $alt+r mode "resize"




#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this sectionr
# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

input "type:touchpad" {
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
    dwt enabled  # disable while typing
    drag_lock disabled
    # drag disabled
}


# font pango:monospace 8
font pango:JetBrainsMono Nerd Font 7


exec_always bash -c 'pkill -x waybar; exec waybar'
#exec_always pkill waybar; waybar

include /etc/sway/config.d/*



# exec gammastep -c ~/.config/gammastep/config.ini

# exec_always gammastep -c ~/.config/gammastep/config.ini
# exec gammastep -O 4500


bindsym Alt+space workspace next
# bindsym Alt+b workspace prev




# Start clipman and store clipboard history
# exec wl-paste --watch clipman store
# exec clipman

# Shortcut to open clipboard history with wofi
# bindsym $mod+c exec "clipman pick -t wofi"


exec_always clipman store --daemon
bindsym $mod+c exec "clipman pick --tool wofi | wl-copy"


for_window [app_id=\"pavucontrol\"] floating enable


# Nitesh Kumar Yadav


exec_always --no-startup-id dunst


# Screenshot full screen and notify
bindsym Print exec grim ~/Pictures/Screenshot/screenshot-$(date +%Y%m%d-%H%M%S).png && notify-send -t 1000 "Screenshot saved"

# Screenshot selected area and notify
bindsym Shift+Print exec grim -g "$(slurp)" ~/Pictures/Screenshot/screenshot-$(date +%Y%m%d-%H%M%S).png && notify-send -t 1000 "Screenshot saved"


# bindsym $mod+Shift+x exec swaylock -f -c 000000

#---------------------------
#-- Graphical appearance: --
#---------------------------

	# Gaps' default size & behavior:
	# gaps inner 7
	# smart_gaps on
	#
	# # Gaps' size modifiers:
	#  bindsym $mod+plus gaps inner current plus 7
	# bindsym $mod+Shift+plus gaps inner current minus 7
	# bindsym $mod+o gaps inner current set 0
	#
	# Borders:
	# default_border pixel 3
	# smart_borders on
	# default_floating_border normal

	# Toggle border style:
	bindsym $mod+Shift+b exec swaymsg border toggle
  bindsym $alt+Shift+b exec swaymsg border toggle
	# Colors:
	#  set $ac		#839496
	# set $uf		#888888
	# set $fg		#283337
	# set $bg		#383838
	# set $ub		#f2777a
	# set $bar	#4B4B4B
	# set $ta		#FFFFFF

	# Window Border color:		border:		backgr:		text:		indicator:
	# client.focused			$ta		$ac		$ta		$ac
	# client.focused_inactive		$uf     	$bg		$uf		$ac
	# client.unfocused		$uf     	$bg		$uf		$ac
	# client.urgent			$uf     	$ub		$fg		$ac
	#



# Hold $mod + left mouse button to move floating windows
# Set border for floating windows
# Set border with specific width for floating windows
# Default border for tiled windows
floating_modifier $mod


# exec gammastep -c ~/.config/gammastep/config.ini



exec gammastep -c ~/.config/gammastep/config.ini -v
